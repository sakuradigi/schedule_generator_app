import tkinter as tk

def generate_notice():
    # 獲取使用者輸入的值
    title = title_entry.get()
    time = time_entry.get()
    host = host_entry.get()
    location = location_var.get()
    attendees = attendees_text.get("1.0", "end-1c")
    agenda = agenda_text.get("1.0", "end-1c")
    remarks = remarks_text.get("1.0", "end-1c")

    # 處理備註的預設值
    if not remarks:
        remarks = "請以府內人員精簡出席為原則，如因有行程或要務無法出席者，請委任其他出席者代理"
    if not agenda:
        agenda = "說明活動規劃、市長出席動線、需配合事項等（請主辦單位準備相關資料及現場規劃圖片供參）"

    # 建立開會通知的內容
    notice = title + "會前會 開會通知" + "\n"
    notice += "一、時間：" + time + "\n"
    notice += "二、主持人：" + host + "\n"
    notice += "三、地點：" + location + "\n"
    notice += "四、出席者："'市長室新聞、行程、場勘、文稿等組派員；'+ attendees + "\n"
    notice += "五、議程：" + agenda + "\n"
    notice += "六、備註：" + remarks

    # 輸出結果
    output_text.delete("1.0", "end")
    output_text.insert("1.0", notice)

# 建立主視窗
window = tk.Tk()
window.title("開會通知產生器")

# 標題
title_label = tk.Label(window, text="標題")
title_label.pack()
title_entry = tk.Entry(window)
title_entry.pack()

# 時間
time_label = tk.Label(window, text="時間")
time_label.pack()
time_entry = tk.Entry(window)
time_entry.pack()

# 主持人
host_label = tk.Label(window, text="主持人")
host_label.pack()
host_entry = tk.Entry(window)
host_entry.pack()

# 地點
location_label = tk.Label(window, text="地點")
location_label.pack()
location_var = tk.StringVar()
location_var.set("市長室會議室")
location_radio1 = tk.Radiobutton(window, text="市長室會議室", variable=location_var, value="市長室會議室")
location_radio2 = tk.Radiobutton(window, text="原史副辦會議室", variable=location_var, value="原史副辦會議室")
location_radio1.pack()
location_radio2.pack()

# 出席者
attendees_label = tk.Label(window, text="出席者")
attendees_label.pack()
attendees_text = tk.Text(window, height=3)
attendees_text.pack()

# 議程
agenda_label = tk.Label(window, text="議程")
agenda_label.pack()
agenda_text = tk.Text(window, height=5)
agenda_text.pack()

# 備註
remarks_label = tk.Label(window, text="備註")
remarks_label.pack()
remarks_text = tk.Text(window, height=5)
remarks_text.pack()

# 產生按鈕
generate_button = tk.Button(window, text="產生通知", command=generate_notice)
generate_button.pack()

# 輸出結果
output_label = tk.Label(window, text="開會通知")
output_label.pack()
output_text = tk.Text(window, height=10)
output_text.pack()

# 啟動主迴圈
window.mainloop()

